
<div class="main-cart-form">
  <table class="main-cart-flex-table">
    <thead class="small--hide">
      <tr class="border-bottom">
        <th>{{ 'cart.label.product' | t }}</th>
        <th>{{ 'cart.label.price' | t }}</th>
        <th>{{ 'cart.label.quantity' | t }}</th>
        <th>{{ 'cart.label.total' | t }}</th>
      </tr>
    </thead>
      <tbody>
        <!-- if cart has loaded and has items -->
        <template v-if="cart">
          <template v-for="(item, index) in cart.items">
            <tr class="flex-table-row">
              <td data-label="{{ 'customer.order.product' | t }}">
                 <div class="product-col-flex">
                   <div class="img">
                      <template v-if="item.image">
                         <a :href="item.url">
                            <img class="img-fluid mr-4" width="150" :src="item.image" alt="">
                           </a>
                       </template>
                  </div>

                  <div class="title">
                     <a :href="item.url">${ item.title }</a>
                        <template v-if="!item.product_has_only_default_variant">
                           <p>${ item.variant_title }</p>
                        </template>
                                      
                        <template v-if="item.properties">
                          <template v-for="p in item.properties">
                             <template  v-if="p.first">
                                ${ p.first}
                                 <template v-if="p.last.includes('/uploads/')">
                                     <a :href="p.last"> ${p.last.split('/').pop()} </a>
                                 </template>
                                 <template v-else>
                                  ${p.last}
                                  </template>
                              </template>
                          </template>
                      </template> <!-- endif item.properties -->
                      
                  </div>  <!-- title -->
                 </div>
              </td>
                        
                        <td data-label="{{ 'cart.label.price' | t }}">
                          <template v-if="item.original_line_price != item.line_price">
                            <span class="visually-hidden">{{ 'cart.label.discounted_price' | t }}</span>
                            <div>${ cartMoney(item.price) }</div>
                            <span class="visually-hidden">{{ 'cart.label.original_price' | t }}</span>
                            <div>${ cartMoney(item.price) }</div>
                          </template>

                          <template v-else>
                                ${cartMoney(item.price) }
                          </template>

                        </td>
                        <td data-label="{{ 'cart.label.quantity' | t }}">
                          <div class="mini-cart-quantity">
                            <input type="text" v-model="item.quantity" />
                            <button class="mini-cart-quantity-button" @click="decrement(item)">-</button>
                            <button class="mini-cart-quantity-button" @click="increment(item)">+</button>
                          </div>
                        </td>
                        <td id="cart_item_price" data-label="{{ 'cart.label.total' | t }}">
                          <p>${ cartMoney(item.price * item.quantity) }</p>
                        </td>
                      </tr>
        
                    </template>

              </template>

            </tbody>
  
    </table>
    <p>Subtotal: </p>
    <p>${ cartMoney(cart.total_price) }</p>
    
    {% if settings.cart_notes_enable %}
    <label class="form-label" for="CartSpecialInstructions">{{ 'cart.general.note' | t }}</label>
    <textarea class="form-control" name="note" id="CartSpecialInstructions">{{ cart.note }}</textarea>
{% endif %}

</div>

<script>

  const CartFormItems = {
    name: 'Vue main cart page',

    delimiters: ['${', '}'],
      data() {
        return{
          cartData: store.state.cartState,
        }
      },
      computed:{
        cart(){
          return this.cartData[0];
        }
      },
      methods: {
        cartMoney(value) {
          if (!value) return 0
          return "$" + (value/100).toLocaleString()
        },
        deleteCartItem(item) {
          const data = {
            "id": item.key,
            "quantity": 0
          }

          axios.post('/cart/change.js', data)
            .then(response => {
              store.getCart()
            })
            .catch(error => console.log(error))
        },
        decrement(item) {
          const data = {
            "id": item.key,
            "quantity": item.quantity - 1
          }

          axios.post('/cart/change.js', data)
            .then(response => {
              store.getCart()
            })
            .catch(error => console.log(error))
        },
        increment(item) {
          const data = {
            "id": item.key,
            "quantity": item.quantity + 1
          }

          axios.post('/cart/change.js', data)
            .then(response => {
              store.getCart()
            })
            .catch(error => console.log(error));
      }
    }
  }

  const CartForm = Vue.createApp(CartFormItems).mount('.main-cart-form');

</script>